"""
Вариант №39: Список «Программа для робота»

Обязательные поля:
- Номер команды (назначается автоматически);
- Действие команды (выбирается пользователем из вариантов поворот налево, поворот направо, шаг вперёд, прыжок и т.д.);
- Поле игры (двумерный динамический массив, каждая ячейка которого – клетка на поле действия, с заданной высотой или препятствием, а также финишем. 
Заполняется из файла);
- Робот (массив из трёх элементов – координат и направления);
- Счётчик количества команд.

Возможности класса:
- Автоматическая инициализация игрового поля;
- Ручная (пользовательская) инициализация игрового поля (макс. 10х10);
- Случайная инициализация игрового поля (по возможности);
- Вывод поля и команд на экран;
- Исполнение команд роботом.

Возможности программы:
- Выбор режима игры (поле из файла, пользовательское или случайное);
- Запись пользовательского поля в файл;
- Наличие основной «программы» и «функций» (от 1 до 3);
- Составление «программы» робота из команд;
- Замена, вставка или удаление любой команды между двумя другими;
- Вывод поля и команд на экран;
- Запуск «программы».

Требования к программе:
- Организация команд в виде созданного вручную списка (отдельный список для основной «программы» и каждой «функции»);
- Максимально предусмотренные ошибки пользователя;
- Статические и конст. методы, параметры по умолчанию, перегрузка [];
- Визуальное отображение псевдографикой (при помощи таблицы ASCII);

Пояснения:
Есть поле, каждая ячейка которого имеет заданную высоту. На поле находится робот, размером в одну ячейку. 
Он может свободно перемещаться по ячейкам, находящимся на одном с ним уровне и прыгать на ячейки, с уровнем отличающимся на один (в любую сторону). 
Разница в больше уровней становится непреодолимым препятствием. Дополнительно можно придумать другие препятствия (например разрушаемые). 
Каждый шаг или прыжок робота перемешает его на одну ячейку, а повороты – нет. Можно придумать и другие команды (например удары или проверки).
Цель робота достичь финиша, который располагается где-то на поле. 
Цель игрока, из имеющихся команд составить «программу», которая доведёт робота до финиша. 
Сложность в том, что действия выполняются не в момент их выбора игроком, а лишь после того как программа будет готова и игрок нажмёт «старт».

"""

from colorama import init, Fore, Back, Style

init(autoreset=True)

"""
█ - wall
≡ - barrier
© - robot
░ - floor
"""

# print(Style.BRIGHT + Back.RED + "█", end='')
# print('≡', end='')
# print(Style.BRIGHT + Back.RED + "█")
# print(Style.BRIGHT + Back.RED + "█", end='')
# print('©', end='')
# print(Style.BRIGHT + Back.RED + "█")


'''
 12345678901234567890123
█████████████████████████ 
█░░░░░░░░░█░░░≡░░░░░█░░░█ 1
█░░░░░█░░░░░░░░█░░░█░░░░█ 2
█    ©   ≡    ≡         █ 3
█   ≡      █      █     █ 4
█            ≡      ≡   █ 5
█      █ ≡  █    █      █ 6
█    █       ≡      ≡   █ 7
█         █       █     F 8
█████████████████████████ 
'''


class RobotCommand:
    def __init__(self):
        command_id = 0
        '''поворот
        налево, поворот
        направо, шаг
        вперёд, прыжок'''
        move = ''
        game_field = ''
        robot = ('x', 'y', 'direction???')
        commands_counter = 0  # class variable ???
